<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>matrix on Notes on engineering math</title>
    <link>https://sprjg.github.io/tags/matrix/</link>
    <description>Recent content in matrix on Notes on engineering math</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Feb 2021 00:00:00 +0530</lastBuildDate>
    
	<atom:link href="https://sprjg.github.io/tags/matrix/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Algo walkthrough: pacific atlantic water flow</title>
      <link>https://sprjg.github.io/posts/20210131201122-algo_walkthrough_pacific_atlantic_water_flow/</link>
      <pubDate>Wed, 10 Feb 2021 00:00:00 +0530</pubDate>
      
      <guid>https://sprjg.github.io/posts/20210131201122-algo_walkthrough_pacific_atlantic_water_flow/</guid>
      <description>Note:
The order of returned grid coordinates does not matter. Both m and n are less than 150.
Link to the problem.
 Intuitions The question directly gives us a way to visualize the matrix: as an elevation map. Following is a matrix and the corresponding elevation map:
 ~ ~ ~ ~ ~
~ 1 2 2 3 (5) *
~ 3 2 3 (4) (4) *
~ 2 4 (5) 3 1 *</description>
    </item>
    
    <item>
      <title>Algo walkthrough: spiral matrix</title>
      <link>https://sprjg.github.io/posts/20201205201509-algo_walkthrough_spiral_matrix/</link>
      <pubDate>Sun, 06 Dec 2020 00:00:00 +0530</pubDate>
      
      <guid>https://sprjg.github.io/posts/20201205201509-algo_walkthrough_spiral_matrix/</guid>
      <description>Example 1:
Input matrix: [[1,2,3],[4,5,6],[7,8,9]]
Output: [1,2,3,6,9,8,7,4,5]
Link to the problem.
 Intuitions Track the spiral literally I can definitely think of at least one solution involving 4 pointers . The 4 pointers track the size of the matrix as the spiral closes inwards.
  But how to track the current location? A tuple with row and column numbers? At first we set direction to move towards right. When the column number reaches a value equal to right we change direction to move downwards.</description>
    </item>
    
    <item>
      <title>Algo walkthrough: set matrix zeroes</title>
      <link>https://sprjg.github.io/posts/20201130130544-algo_walkthrough_set_matrix_zeroes/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0530</pubDate>
      
      <guid>https://sprjg.github.io/posts/20201130130544-algo_walkthrough_set_matrix_zeroes/</guid>
      <description>Link to the problem.
Hints  A straight forward solution using O(mn) space is probably a bad idea.
A simple improvement uses O(m + n) space, but still not the best solution.
Could you devise a constant space solution? So this problem is more about space than time.   Intuitions It seems obvious that a single pass through the matrix would work. Is there a reason even a single pass is not needed?</description>
    </item>
    
  </channel>
</rss>