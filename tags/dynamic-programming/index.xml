<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dynamic-programming on Notes on engineering math</title>
    <link>https://sprjg.github.io/tags/dynamic-programming/</link>
    <description>Recent content in dynamic-programming on Notes on engineering math</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 Feb 2021 00:00:00 +0530</lastBuildDate>
    
	<atom:link href="https://sprjg.github.io/tags/dynamic-programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Algo walkthrough: jump game</title>
      <link>https://sprjg.github.io/posts/algo_walkthrough_jump_game/</link>
      <pubDate>Fri, 26 Feb 2021 00:00:00 +0530</pubDate>
      
      <guid>https://sprjg.github.io/posts/algo_walkthrough_jump_game/</guid>
      <description> Example 1:
Input: nums = [2,3,1,1,4]
Output: true
Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.
Example 2:
Input: nums = [3,2,1,0,4]
Output: false
Explanation: You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.
 Link to the problem
Intuitions </description>
    </item>
    
    <item>
      <title>Algo walkthrough: product of array except self</title>
      <link>https://sprjg.github.io/posts/algo_walkthrough_product_of_array_except_self/</link>
      <pubDate>Sat, 12 Dec 2020 00:00:00 +0530</pubDate>
      
      <guid>https://sprjg.github.io/posts/algo_walkthrough_product_of_array_except_self/</guid>
      <description>Input: [1,2,3,4]
Output: [24,12,8,6]
Note: Please solve it without division and in O(n).
Link to the problem.
 What not to do Let&amp;rsquo;s ignore the note for now.
Using division If we use division, how would we solve this problem? We could start with a single pass over the array. In this pass, we multiply all the elements and calculate complete_product. For each element e, we can now calculate \(\frac{complete-product}{e}\).</description>
    </item>
    
    <item>
      <title>Algo walkthrough: number of ways to decode message</title>
      <link>https://sprjg.github.io/posts/algo_walkthrough_number_of_ways_to_decode_message/</link>
      <pubDate>Sat, 05 Dec 2020 00:00:00 +0530</pubDate>
      
      <guid>https://sprjg.github.io/posts/algo_walkthrough_number_of_ways_to_decode_message/</guid>
      <description>Link to the problem
Intuitions Variable code length The root of the issue is variable code length. Some codes are length-1 (a-i), some are length-2 (j-z). This leads to may lead to; there are conditions to deal with but we&amp;#39;ll come to that later  multiple correct decodings for the same input code. Let&amp;rsquo;s take a minimal example of 25 as the input code. We could decode it as be or y.</description>
    </item>
    
  </channel>
</rss>