[{"title":"Fourier Analysis","href":"/posts/20200524030032-pubnotes_ddse_fourier","content":"This is for my notes for Prof Steve Bruntons video lectures of Fourier AnalysishttpswwwyoutubecomwatchvjNC0jxb0OxElistPLMrJAkhIeNNT5FXh3Oy0Y4LTj0Oxo8GqsC Real domain to complex domain realdomaintocomplexdomain The first confusion for me was the shift in the sum limits from real domain to complex domain The real fourier series is expressed as sumk0infty fraca02 ak cos kx bk sin kx The intuition here is that harmonics can express any function The constant term accounts for all the different initial phase shifts of each of these harmonics The mathematical property of these trigonometric terms sinkx coskx is that they are orthogonal Their inner product intpipi fx gx dx 0 To verify The conjugation on the second term is irrelevant for real valued functions fg can be any sinkx coskx term This lecturehttpsocwmiteduresourcesres18008calculusrevisitedcomplexvariablesdifferentialequationsandlinearalgebrafall2011studymaterialsMITRES5F185F0085FpartIII5Fsol08pdf goes into detail about each combination The intuition is that intpipi sin ax cos bx is an odd function so integrating over this particular limit will be zero But when ab int sin2 ax int cos2 ax are reduced using trigonometric identities to a constant plus a periodic function and the constant part evaluates to pi All of the above is for the real domain In complex domain the fourier series becomes sumkinftykinfty ck eikx where ck in mathbbC The sum starts from negative infinity now unlike the real domain Oscillations in real domain rotations in complex domain oscillationsinrealdomainrotationsincomplexdomain In real domain the eigenfunctions are either sin kx or cos kx This means that sinkx and sinkx are not orthogonal This can be verified by the inner product which evaluates to pi So negative k in the real fourier series redundant as the eigenfunctions of k 0 already include the k 0 part too Another way to think about this is phase shift k 0 terms All the phase shift terms are already accounted for by a0 But in complex domain the eigenfunctions represent a rotation at different frequencies and starting points rather than oscillation k 0 represents an anticlockwise rotation This videohttpswwwyoutubecomwatchvspUNpyF58BY helps In this case k 0 functions The computation of the inner product confirms the same of course TODO The complex conjugation of the second term in the inner product is equivalent to a direction change of rotation I know that the integration of a complex function is related to contour integration but I dont see how the inner product in the complex domain represents closeness of two rotations Yet to read thishttpwww1spmsntuedusgydchongteaching085Fcontour5Fintegrationpdf"},{"title":"Compressed Sensing with the Fourier Ensemble","href":"/posts/20200611111551-compressed_sensing_with_the_fourier_ensemble","content":"Im reading the topic of compressed sensing and I find it extremely dense with a lot of historical perspective This videohttpswwwyoutubecomwatchvaHCyHbRIz44 is a great start to the topic Reproducing the example reproducingtheexample The example at 1405 in the videohttpsyoutubeaHCyHbRIz44t846 uses a DCT The cosamp function used below is from this repositoryhttpsgithubcomavirmauxCoSaMP The code here is slightly modified from the jupyter notebook available herehttpdatabookuwcom The sample audio signal thesampleaudiosignal python stx 0 end 1 n 4096 Fs int nend stx from math import pi from numpyfft import rfft rfftfreq t nparangestx end 1Fs x npcos2 97 pi t npcos2 777 pi t f rfftx psd ffn freqs rfftfreqn Fs pltclose pltfigure pltplotfreqs f r fint npfloorabsf filename audio reconstruction compressed sensing pltsuptitlefilename pltsavefigffilenamepng pltclose xfft npfftirfftf pltsaveinverse fourier check compressed sensing lambda pltplott xfft r pltsavezoom in inverse fourier check compressed sensing lambda pltplott xfft r pltxlim025033 text homeplocallibpython36sitepackagesnumpycoreasarraypy85 ComplexWarning Casting complex values to real discards the imaginary part return arraya dtype copyFalse orderorder The code thecode python p 128 from scipyfftpack import dct idct In npdiagnponesn Psi dctIn axis0 Psi splinalgdftnreal pltsavePsi matrix heatmap cosamp lambda pltimshowPsi cmaphot interpolationnearest idxs nprandomrandp nastypeint y xidxs pltsavemarked measurements of original signal for compressed sensing cosamp lambda pltplott x tidxs y rx pltxlim025 033 Theta Psiidxs pltsaveTheta matrix heatmap cosamp lambda pltimshowTheta cmaphot interpolationnearest xest cosampTheta y 3 Score estimation printfScore estimation nplinalgnormx xest nplinalgnormx pltsaveresult heatmap dct cosamp lambda pltplott xest xdct idctxest pltsavecompare original signal with recovered signal from cvxopt dct cosamp lambda pltplott xdct r t x k pltxlim025 033 text main35 FutureWarning rcond parameter will change to the default of machine precision times maxM N where M and N are the input matrix dimensions To use the future default and silence this warning we advise to pass rcondNone to keep using the old explicitly pass rcond1 Score estimation 10002591450121945 While I can reproduce the result from the video I find the selection of basis confusing If the random drawing of measurements is from the DCT matrix then is it equivalent to a measurement in the frequency domain But the code is clearly measuring from the time domain samples For example could I use the Fourier basis and achieve the same results Simply changing from DCT to DFT does not work I tried Interestingly I recover back a signal which has the correct frequency spikes but very low energy So the resulting estimation is scaled down by 3 orders but the frequency content matches Back to basics backtobasics From the original workhttpsarxivorgabsmath0410542 Sec 11 the authors define FOmega f hatfk k in Omega The Omega is a set of frequencies sampled uniformly in random The reconstruction g is obtained by min g l1 min Sigmat in mathbbZn gt subject to hatgk hatfk forall k in Omega In the above signal the sparsity is expected in the frequency domain ie we minimize the l1 norm in the frequency domain The equivalent problem formulation theequivalentproblemformulation min hatg l1 subject to gt ft forall t in T and the result is highly probable to be bhatf The Theta matrix thethetamatrix FOmega now is the random drawing of rows from the ifft Using IDFT as Psi usingidftaspsi Psi can also be created from applying the inverse fft to a identity matrix since its an unitary operation The idea is to randomly sample rows of the Psi matrix and create a theta python random indices of the DFT between 0 and n 4096 p 128 idxs nprandomrandp nastypeint In npdiagnponesn idft npfftifftInreal python Theta idftidxs pltsaveTheta heatmap for fft basis lambda pltimshowTheta cmaphot interpolationnearest The measurement y is a sparse signal taken at random indices of the actual x beginsrc python session compressedsensing measurement is random sampling at the above indices y xidxs Using file20200608115955convexoptimizationorgconvex optimization We can use convex optimization to solve for the sparsest s sres optminimizelambda e nplinalgnorme 1 x0 npzerosn constraints type eq fun lambda e Theta e y sres cosampTheta y 10 pltsaveresulting sparse in FFT basis lambda pltplotsres pltimshownpmatrixsres cmaphot interpolationnearest xfft npfftifftsres pltsavecompare original signal with recovered signal from cosamp dft lambda pltplott xfft r t x k pltxlim025033 text main35 FutureWarning rcond parameter will change to the default of machine precision times maxM N where M and N are the input matrix dimensions To use the future default and silence this warning we advise to pass rcondNone to keep using the old explicitly pass rcond1 homeplocallibpython36sitepackagesnumpycoreasarraypy85 ComplexWarning Casting complex values to real discards the imaginary part return arraya dtype copyFalse orderorder Results results So drawing from the inverse fft matrix does work The recovered basis also shows the spikes at the right frequencies Unresolved confusions unresolvedconfusions How is it possible to draw from the DCT matrix while measuring the time domain samples Using DCT as Phi does lead to correct recovery of the original frequencies so theres no flaw in the method Units of the recovered DCT basis yaxis"}]